[{"/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/pages/Dashboard/index.tsx":"1","/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/services/mocados.ts":"2","/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/services/api.ts":"3","/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/components/ModalCalendar/index.tsx":"4","/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/components/Header/index.tsx":"5"},{"size":3061,"mtime":1610258933800,"results":"6","hashOfConfig":"7"},{"size":3780,"mtime":1610071235497,"results":"8","hashOfConfig":"7"},{"size":114,"mtime":1610062070384,"results":"9","hashOfConfig":"7"},{"size":1481,"mtime":1610259096732,"results":"10","hashOfConfig":"7"},{"size":288,"mtime":1610259010932,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1pa2ztc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/pages/Dashboard/index.tsx",["23"],"/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/services/mocados.ts",[],"/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/services/api.ts",[],"/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/components/ModalCalendar/index.tsx",["24","25"],"import React, {useState, useEffect} from 'react';\n\nimport Close from '../../assets/close.svg'\n\nimport './styles.scss'\n\n\ninterface ModalCalendarProps {\n  setModalActive(bool: any): void;\n  isDataModal: {\n    id: string,\n    title: string,\n    data: string,\n    description: string,\n    start: number,\n    finish: number\n  };\n  modalActive: boolean;\n  infor: Array<{}>;\n \n}\nconst ModalCalendar: React.FC<ModalCalendarProps> = ({\n  modalActive, setModalActive, infor, isDataModal\n}) => {\n\n  return (\n    <section className=\"containerModal\">\n      <button onClick={() => setModalActive(false)} className=\"buttonClose\">\n        <img src={Close} alt=\"\" className=\"\"/>\n      </button>\n      <section className=\"mainModal\">\n        <div className=\"mainModal__section--top\">\n          <h1>\n          {isDataModal.title}\n          </h1>\n        \n        </div>\n        <div className=\"mainModal__section--main\">\n          <div className=\"main--left\">\n            <h2>Data:</h2>\n          <h2>  \n          {isDataModal.data}\n          </h2>\n          <h3>ID:</h3>\n          <h3 className=\"\">\n          \n          {isDataModal.id}\n          </h3>\n          </div>\n          <p>{isDataModal.description} </p>\n        </div>\n        <div className=\"mainModal__section--low\">\n          <p>Início:</p><p>{isDataModal.start} </p>\n         <p className=\"\">Fim:</p> <p className=\"\">{isDataModal.finish}</p>\n        </div>\n\n      </section>\n      \n    </section>\n  )\n\n\n}\n\nexport default ModalCalendar","/home/sindyme/Área de Trabalho/desafio-frontend/front-end/src/components/Header/index.tsx",["26","27","28"],{"ruleId":null,"fatal":true,"severity":2,"message":"29","line":123,"column":0},{"ruleId":"30","severity":1,"message":"31","line":1,"column":16,"nodeType":"32","messageId":"33","endLine":1,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":1,"column":26,"nodeType":"32","messageId":"33","endLine":1,"endColumn":35},{"ruleId":"30","severity":1,"message":"31","line":1,"column":16,"nodeType":"32","messageId":"33","endLine":1,"endColumn":24},{"ruleId":"30","severity":1,"message":"34","line":1,"column":26,"nodeType":"32","messageId":"33","endLine":1,"endColumn":35},{"ruleId":"30","severity":1,"message":"35","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":13},"Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Close' is defined but never used."]